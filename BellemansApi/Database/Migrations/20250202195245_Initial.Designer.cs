// <auto-generated />
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(BellemansDbContext))]
    [Migration("20250202195245_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Bellemans")
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Page.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Pages", "Bellemans");
                });

            modelBuilder.Entity("Domain.Page.PageSection", b =>
                {
                    b.Property<int>("PageId")
                        .HasColumnType("integer");

                    b.Property<int>("SectionId")
                        .HasColumnType("integer");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.HasKey("PageId", "SectionId");

                    b.HasIndex("SectionId");

                    b.ToTable("PageSections", "Bellemans");
                });

            modelBuilder.Entity("Domain.Section.BaseSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Sections", "Bellemans");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Domain.Section.HeaderSection", b =>
                {
                    b.HasBaseType("Domain.Section.BaseSection");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("HeaderSections", "Bellemans");
                });

            modelBuilder.Entity("Domain.Page.PageSection", b =>
                {
                    b.HasOne("Domain.Page.Page", "Page")
                        .WithMany("PageSections")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Section.BaseSection", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Page");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("Domain.Section.HeaderSection", b =>
                {
                    b.HasOne("Domain.Section.BaseSection", null)
                        .WithOne()
                        .HasForeignKey("Domain.Section.HeaderSection", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Page.Page", b =>
                {
                    b.Navigation("PageSections");
                });
#pragma warning restore 612, 618
        }
    }
}
